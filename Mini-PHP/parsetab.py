
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftINCLUDEREQUIREleftCOMMAleftEQUALPLUSEQUALMINUSEQUALleftSEMIleftORleftXORleftANDnonassocISEQUALDEQUALnonassocLESSLESSEQUALGREATERGREATEREQUALleftPLUSMINUSrightLBRACKETnonassocNEWCLONEleftELSEIFleftELSErightPRIVATEPROTECTEDPUBLICABSTRACT AMPERSANT AND APOSTROPHE ARRAY AS BREAK CALLABLE CASE CATCH CLASS CLONE CLOSETAG CLOSETAGAL COLON COMMA COMMENTS COMMENTS_C99 CONST CONTINUE DECLARE DEFAULT DEQUAL DIE DISTINT DIVIDE DO DOT DOT_DOT ECHO ELSE ELSEIF EMPTY ENDDECLARE ENDFOR ENDFOREACH ENDIF ENDSWITCH ENDWHILE EQUAL EVAL EXIT EXTENDS FALSE FOR FOREACH FUNCTION GLOBAL GOTO GREATER GREATEREQUAL HASHTAG ID IDVAR IF IMPLEMENTS INCLUDE INCLUDE_ONCE INSTANCEOF INSTEADOF INTERFACE ISEQUAL ISSET LBLOCK LBRACKET LESS LESSEQUAL LIST LPAREN MINUS MINUSEQUAL MINUSMINUS NAMESPACE NEW NUM OPENTAG OR PLUS PLUSEQUAL PLUSPLUS PRINT PRIVATE PROTECTED PUBLIC QUOTES RBLOCK RBRACKET REQUIRE REQUIRE_ONCE RETURN RPAREN SEMI STATIC STRING SWITCH THROW TIMES TIMESTIMES TRAIT TRUE TRY UNSET USE VAR VOID WHILE XOR __HALT_COMPILERprogram : OPENTAG declaration_list CLOSETAGdeclaration_list : declaration_list  declaration\n   \t\t\t\t\t   | declaration\n   declaration : var_declaration\n\t\t\t\t   | fun_declaration\n\t\t\t\t   | area fun_declaration\n\t\t\t\t   | header_declaration\n\t\t\t\t   | class_declaration\n\t\t\t\t   | echo_stmt\n\t\t\t\t   | selection_stmt\n\t\t\t       | iteration_stmt\n\t\t\t\t   | typeclass\n\techo_stmt : echo_stmt ECHO STRING SEMI\n\t\t\t\t | echo_stmt ECHO IDVAR SEMI\n\t\t\t\t | empty\n\t\t\t\t | echo_stmt ECHO NUM SEMI\n\t\t\t\t | echo_stmt ECHO boolean SEMI\n\t\t\t\t | echo_stmt ECHO fun_declaration SEMI\n\theader_declaration : REQUIRE LPAREN STRING RPAREN SEMI\n                          | INCLUDE LPAREN STRING RPAREN SEMI\n    class_declaration : area CLASS ID LBLOCK attribute RBLOCK\n\t\t\t\t\t\t | CLASS ID LBLOCK attribute RBLOCK\n\tattribute : attribute area var_declaration\n\t\t\t\t | area var_declaration\n\t\t\t\t | attribute area fun_declaration\n\t\t\t\t | area fun_declaration\n\tarea : PRIVATE\n\t\t\t| PUBLIC\n\t\t\t| PROTECTED\n\tvar_declaration : IDVAR SEMI var_declaration\n                       | IDVAR SEMI\n                       | TIMESTIMES IDVAR SEMI\n                       | TIMESTIMES IDVAR SEMI var_declaration\n                       | IDVAR EQUAL NUM SEMI var_declaration\n                       | IDVAR EQUAL NUM SEMI\n                       | IDVAR EQUAL boolean SEMI var_declaration\n                       | IDVAR EQUAL boolean SEMI\n                       | IDVAR EQUAL IDVAR SEMI var_declaration\n                       | IDVAR EQUAL IDVAR SEMI\n                       | AMPERSANT IDVAR SEMI var_declaration\n                       | AMPERSANT IDVAR EQUAL IDVAR SEMI  selection_stmt\n                       | AMPERSANT IDVAR SEMI\n                       | IDVAR EQUAL simple_expression SEMI\n\tfun_declaration : FUNCTION ID LPAREN params RPAREN\n\t\t\t\t\t   | FUNCTION ID LPAREN params RPAREN compount_stmt\n\tparams : param_list\n\t\t\t  | empty\n\tparam_list : param_list COMMA param_list\n\t\t\t\t  | param\n\tparam : IDVAR\n             | IDVAR LBRACKET RBRACKET\n    compount_stmt : LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCKlocal_declarations : local_declarations var_declaration\n\t\t\t\t\t\t  | empty\n\tstatement_list : statement_list statement\n\t\t\t\t\t  | empty\n\tstatement : expression_stmt\n\t\t\t\t | compount_stmt\n\t\t\t\t | selection_stmt\n\t\t\t\t | iteration_stmt\n\t\t\t     | return_stmt\n\t\t\t     | class_declaration\n\t\t\t\t | echo_stmt\n\texpression_stmt : expression SEMIselection_stmt : IF LPAREN expression RPAREN statement\n\t\t\t\t\t  | IF LPAREN expression RPAREN statement selection\n\n\tselection : ELSE statement\n\t\t\t\t | ELSEIF statement selection\n\t selection_stmt : SWITCH LPAREN var RPAREN statement\n\t\t\t\t\t  | CASE NUM COLON statement BREAK SEMI\n\t\t\t\t\t  | DEFAULT COLON statement BREAK SEMI\n\n\titeration_stmt : FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement iteration_stmt : WHILE LPAREN expression RPAREN statementiteration_stmt : DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPARENreturn_stmt : RETURN SEMI\n\t\t\t\t   | RETURN expression SEMI\n\texpression : var EQUAL expression\n\t\t\t\t  | simple_expression\n\t\t\t\t  | var EQUAL AMPERSANT IDVAR\n\t\t\t      | expression AND expression\n\t\t\t\t  | expression OR expression\n\tvar : IDVAR\n\t\t   | IDVAR LBRACKET expression RBRACKET\n\tsimple_expression : additive_expression relop additive_expression\n\t\t\t\t\t\t | additive_expression\n\trelop : LESS\n\t\t\t | LESSEQUAL\n\t\t\t | GREATER\n\t\t\t | GREATEREQUAL\n\t\t\t | DEQUAL\n\t\t\t | DISTINT\n\t\t\t | ISEQUAL\n\tadditive_expression : additive_expression addop term\n    \t\t\t\t\t   | term\n    \t\t\t\t\t   | term MINUSMINUS\n    \t\t\t\t       | term PLUSPLUS\n\taddop : PLUS\n\t\t\t | MINUS\n\tterm : term mulop factor\n\t\t\t| factor\n\tmulop : TIMES\n\t\t\t | DIVIDE\n\tfactor : LPAREN expression RPAREN\n\t\t\t  | var\n\t\t\t  | NUM\n\t\t\t  | boolean\n\t\t\t  | IDVAR LPAREN args RPAREN\n\targs : args_list\n\t\t\t| empty\n\t\t\t| VOID\n\targs_list : args_list COMMA expression\n\t\t\t\t | expression\n\tboolean : TRUE\n\t\t\t   | FALSE\n\ttypeclass : ID IDVAR EQUAL NEW constructor SEMIconstructor : ID LPAREN RPAREN\n\t\t\t\t   | ID LPAREN args RPAREN\n\tempty :'
    
_lr_action_items = {'VOID':([106,220,],[162,162,]),'EQUAL':([4,39,52,67,78,201,],[35,84,102,-82,134,-83,]),'IDVAR':([2,3,7,8,9,10,11,13,15,20,24,26,27,28,29,30,31,32,34,35,36,37,38,42,43,44,46,47,49,57,65,66,68,70,71,72,74,75,79,81,84,85,87,101,103,104,105,106,107,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,131,132,133,134,135,137,144,145,146,148,149,150,151,152,155,159,161,170,173,174,175,176,177,180,184,186,187,188,189,190,191,193,194,203,204,205,207,208,210,212,213,214,218,219,220,221,223,224,227,228,231,232,233,234,237,238,239,],[4,4,-7,-28,-11,-4,39,-10,-12,-9,-29,-5,-27,-8,52,-15,-3,53,-2,54,-31,67,4,67,89,67,95,67,-6,67,-30,-118,-60,-59,67,-57,-63,-58,-62,-61,136,-42,139,67,-32,67,-39,67,-102,167,-101,-37,-86,167,167,-89,-91,-92,-98,-90,-88,-87,-97,-35,-43,-118,-75,-64,67,67,67,67,-40,67,67,67,-17,-18,-14,-13,-16,4,-33,-38,-36,-34,4,-54,-71,-76,206,-20,-44,139,-65,-69,-73,-19,-22,4,67,-118,-53,167,-41,-45,67,-66,67,-21,-70,67,-115,67,-56,-67,67,-55,-63,67,-68,-52,-72,-74,]),'PLUSPLUS':([54,55,56,58,59,60,61,63,67,73,77,78,167,168,169,201,202,],[-82,108,-114,-106,-113,-100,-104,-105,-82,-105,-106,-104,-82,-99,-103,-83,-107,]),'DEFAULT':([2,3,7,9,10,13,15,20,26,28,30,31,34,36,37,47,49,65,66,68,70,72,74,75,79,81,85,101,103,105,113,125,126,127,129,131,137,144,145,146,148,149,150,151,152,159,161,170,173,174,175,176,177,183,184,186,188,189,190,191,193,204,205,208,210,212,213,214,218,219,221,223,224,227,231,232,233,234,237,238,239,],[5,5,-7,-11,-4,-10,-12,-9,-5,-8,-15,-3,-2,-31,5,5,-6,-30,-118,-60,-59,-57,-63,-58,-62,-61,-42,5,-32,-39,-37,-35,-43,-118,-75,-64,-40,5,5,5,-17,-18,-14,-13,-16,-33,-38,-36,-34,-118,-54,-71,-76,5,-20,-44,-65,-69,-73,-19,-22,-118,-53,-41,-45,5,-66,5,-21,-70,-115,5,-56,-67,-55,-63,5,-68,-52,-72,-74,]),'FOR':([2,3,7,9,10,13,15,20,26,28,30,31,34,36,37,47,49,65,66,68,70,72,74,75,79,81,85,101,103,105,113,125,126,127,129,131,137,144,145,146,148,149,150,151,152,159,161,170,173,174,175,176,177,184,186,188,189,190,191,193,204,205,208,210,212,213,214,218,219,221,223,224,227,231,232,233,234,237,238,239,],[6,6,-7,-11,-4,-10,-12,-9,-5,-8,-15,-3,-2,-31,6,6,-6,-30,-118,-60,-59,-57,-63,-58,-62,-61,-42,6,-32,-39,-37,-35,-43,-118,-75,-64,-40,6,6,6,-17,-18,-14,-13,-16,-33,-38,-36,-34,-118,-54,-71,-76,-20,-44,-65,-69,-73,-19,-22,-118,-53,-41,-45,6,-66,6,-21,-70,-115,6,-56,-67,-55,-63,6,-68,-52,-72,-74,]),'COLON':([5,51,],[37,101,]),'LBLOCK':([21,30,36,37,47,48,65,66,68,70,72,74,75,79,81,85,100,101,103,105,113,125,126,127,129,131,137,144,145,146,148,149,150,151,152,159,161,170,173,174,175,176,177,186,188,189,190,193,204,205,208,212,213,214,218,219,223,224,227,231,232,233,234,237,238,239,],[47,-15,-31,66,66,99,-30,-118,-60,-59,-57,-63,-58,-62,-61,-42,156,66,-32,-39,-37,-35,-43,-118,-75,-64,-40,66,66,66,-17,-18,-14,-13,-16,-33,-38,-36,-34,-118,-54,-71,-76,66,-65,-69,-73,-22,-118,-53,-41,66,-66,66,-21,-70,66,-56,-67,-55,-63,66,-68,-52,-72,-74,]),'BREAK':([30,37,68,69,70,72,74,75,79,81,101,129,131,144,145,146,148,149,150,151,152,157,176,177,188,189,190,193,213,214,218,219,227,233,234,237,238,239,],[-15,-118,-60,128,-59,-57,-63,-58,-62,-61,-118,-75,-64,-118,-118,-118,-17,-18,-14,-13,-16,198,-71,-76,-65,-69,-73,-22,-66,-118,-21,-70,-67,-118,-68,-52,-72,-74,]),'PUBLIC':([2,3,7,9,10,13,15,20,26,28,30,31,34,36,37,47,49,65,66,68,70,72,74,75,79,81,85,99,101,103,105,113,125,126,127,129,131,137,144,145,146,148,149,150,151,152,154,156,159,161,170,173,174,175,176,177,184,186,188,189,190,191,193,195,196,197,204,205,208,210,212,213,214,216,217,218,219,221,223,224,227,231,232,233,234,237,238,239,],[8,8,-7,-11,-4,-10,-12,-9,-5,-8,-15,-3,-2,-31,8,8,-6,-30,-118,-60,-59,-57,-63,-58,-62,-61,-42,8,8,-32,-39,-37,-35,-43,-118,-75,-64,-40,8,8,8,-17,-18,-14,-13,-16,8,8,-33,-38,-36,-34,-118,-54,-71,-76,-20,-44,-65,-69,-73,-19,-22,-26,-24,8,-118,-53,-41,-45,8,-66,8,-25,-23,-21,-70,-115,8,-56,-67,-55,-63,8,-68,-52,-72,-74,]),'MINUSMINUS':([54,55,56,58,59,60,61,63,67,73,77,78,167,168,169,201,202,],[-82,109,-114,-106,-113,-100,-104,-105,-82,-105,-106,-104,-82,-99,-103,-83,-107,]),'AMPERSANT':([2,3,7,8,9,10,13,15,20,24,26,27,28,30,31,34,36,38,49,65,66,68,70,72,74,75,79,81,85,103,105,113,125,126,127,129,131,134,137,144,145,146,148,149,150,151,152,155,159,161,170,173,174,175,176,177,184,186,188,189,190,191,193,194,205,208,210,213,214,218,219,221,227,233,234,237,238,239,],[11,11,-7,-28,-11,-4,-10,-12,-9,-29,-5,-27,-8,-15,-3,-2,-31,11,-6,-30,-118,-60,-59,-57,-63,-58,-62,-61,-42,-32,-39,-37,-35,-43,-118,-75,-64,180,-40,-118,-118,-118,-17,-18,-14,-13,-16,11,-33,-38,-36,-34,11,-54,-71,-76,-20,-44,-65,-69,-73,-19,-22,11,-53,-41,-45,-66,-118,-21,-70,-115,-67,-118,-68,-52,-72,-74,]),'LPAREN':([6,12,16,17,18,19,30,35,36,37,41,42,44,47,54,57,65,66,67,68,70,71,72,74,75,79,81,85,101,103,104,105,106,107,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,131,132,133,134,135,137,144,145,146,148,149,150,151,152,159,161,167,170,173,174,175,176,177,188,189,190,193,199,203,204,205,207,208,212,213,214,215,218,219,220,223,224,227,228,231,232,233,234,237,238,239,],[38,40,42,43,44,45,-15,57,-31,57,87,57,57,57,106,57,-30,-118,106,-60,-59,57,-57,-63,-58,-62,-61,-42,57,-32,57,-39,57,-102,57,-101,-37,-86,57,57,-89,-91,-92,-98,-90,-88,-87,-97,-35,-43,-118,-75,-64,57,57,57,57,-40,57,57,57,-17,-18,-14,-13,-16,-33,-38,106,-36,-34,-118,-54,-71,-76,-65,-69,-73,-22,220,57,-118,-53,57,-41,57,-66,57,228,-21,-70,57,57,-56,-67,57,-55,-63,57,-68,-52,-72,-74,]),'INCLUDE':([2,3,7,9,10,13,15,20,26,28,30,31,34,36,49,65,68,70,72,74,75,79,81,85,103,105,113,125,126,129,131,137,144,145,146,148,149,150,151,152,159,161,170,173,176,177,184,186,188,189,190,191,193,208,210,213,214,218,219,221,227,233,234,237,238,239,],[12,12,-7,-11,-4,-10,-12,-9,-5,-8,-15,-3,-2,-31,-6,-30,-60,-59,-57,-63,-58,-62,-61,-42,-32,-39,-37,-35,-43,-75,-64,-40,-118,-118,-118,-17,-18,-14,-13,-16,-33,-38,-36,-34,-71,-76,-20,-44,-65,-69,-73,-19,-22,-41,-45,-66,-118,-21,-70,-115,-67,-118,-68,-52,-72,-74,]),'OR':([55,56,59,60,61,62,67,73,76,77,78,82,88,91,108,109,112,130,160,165,167,168,169,171,172,178,179,181,182,201,202,206,222,235,],[-94,-114,-113,-100,-104,-85,-82,-105,132,-106,-104,-78,132,132,-96,-95,132,132,132,132,-82,-99,-103,-93,-84,-81,-80,132,132,-83,-107,-79,132,132,]),'DISTINT':([54,55,56,58,59,60,61,62,63,67,73,77,78,108,109,167,168,169,171,201,202,],[-82,-94,-114,-106,-113,-100,-104,118,-105,-82,-105,-106,-104,-96,-95,-82,-99,-103,-93,-83,-107,]),'STRING':([40,45,46,],[86,92,96,]),'COMMA':([55,56,59,60,61,62,67,73,77,78,82,108,109,139,141,143,164,165,167,168,169,171,172,178,179,181,201,202,206,209,211,222,],[-94,-114,-113,-100,-104,-85,-82,-105,-106,-104,-78,-96,-95,-50,-49,187,203,-112,-82,-99,-103,-93,-84,-81,-80,-77,-83,-107,-79,-51,-48,-111,]),'TIMES':([54,55,56,58,59,60,61,63,67,73,77,78,167,168,169,171,201,202,],[-82,111,-114,-106,-113,-100,-104,-105,-82,-105,-106,-104,-82,-99,-103,111,-83,-107,]),'FUNCTION':([2,3,7,8,9,10,13,15,20,23,24,26,27,28,30,31,34,36,46,49,65,68,70,72,74,75,79,81,85,103,105,113,125,126,129,131,137,144,145,146,148,149,150,151,152,155,159,161,170,173,176,177,184,186,188,189,190,191,193,194,208,210,213,214,218,219,221,227,233,234,237,238,239,],[14,14,-7,-28,-11,-4,-10,-12,-9,14,-29,-5,-27,-8,-15,-3,-2,-31,14,-6,-30,-60,-59,-57,-63,-58,-62,-61,-42,-32,-39,-37,-35,-43,-75,-64,-40,-118,-118,-118,-17,-18,-14,-13,-16,14,-33,-38,-36,-34,-71,-76,-20,-44,-65,-69,-73,-19,-22,14,-41,-45,-66,-118,-21,-70,-115,-67,-118,-68,-52,-72,-74,]),'TRUE':([30,35,36,37,42,44,46,47,57,65,66,68,70,71,72,74,75,79,81,85,101,103,104,105,106,107,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,131,132,133,134,135,137,144,145,146,148,149,150,151,152,159,161,170,173,174,175,176,177,188,189,190,193,203,204,205,207,208,212,213,214,218,219,220,223,224,227,228,231,232,233,234,237,238,239,],[-15,59,-31,59,59,59,59,59,59,-30,-118,-60,-59,59,-57,-63,-58,-62,-61,-42,59,-32,59,-39,59,-102,59,-101,-37,-86,59,59,-89,-91,-92,-98,-90,-88,-87,-97,-35,-43,-118,-75,-64,59,59,59,59,-40,59,59,59,-17,-18,-14,-13,-16,-33,-38,-36,-34,-118,-54,-71,-76,-65,-69,-73,-22,59,-118,-53,59,-41,59,-66,59,-21,-70,59,59,-56,-67,59,-55,-63,59,-68,-52,-72,-74,]),'LBRACKET':([54,67,89,139,167,],[104,104,104,185,104,]),'RETURN':([30,36,37,47,65,66,68,70,72,74,75,79,81,85,101,103,105,113,125,126,127,129,131,137,144,145,146,148,149,150,151,152,159,161,170,173,174,175,176,177,188,189,190,193,204,205,208,212,213,214,218,219,223,224,227,231,232,233,234,237,238,239,],[-15,-31,71,71,-30,-118,-60,-59,-57,-63,-58,-62,-61,-42,71,-32,-39,-37,-35,-43,-118,-75,-64,-40,71,71,71,-17,-18,-14,-13,-16,-33,-38,-36,-34,-118,-54,-71,-76,-65,-69,-73,-22,-118,-53,-41,71,-66,71,-21,-70,71,-56,-67,-55,-63,71,-68,-52,-72,-74,]),'NEW':([102,],[158,]),'ELSE':([30,68,70,72,74,75,79,81,129,131,144,145,146,148,149,150,151,152,176,177,188,189,190,193,212,213,214,218,219,226,227,233,234,237,238,239,],[-15,-60,-59,-57,-63,-58,-62,-61,-75,-64,-118,-118,-118,-17,-18,-14,-13,-16,-71,-76,214,-69,-73,-22,-118,-66,-118,-21,-70,214,-67,-118,-68,-52,-72,-74,]),'IF':([2,3,7,9,10,13,15,20,26,28,30,31,34,36,37,47,49,65,66,68,70,72,74,75,79,81,85,101,103,105,113,125,126,127,129,131,137,144,145,146,148,149,150,151,152,159,161,170,173,174,175,176,177,183,184,186,188,189,190,191,193,204,205,208,210,212,213,214,218,219,221,223,224,227,231,232,233,234,237,238,239,],[16,16,-7,-11,-4,-10,-12,-9,-5,-8,-15,-3,-2,-31,16,16,-6,-30,-118,-60,-59,-57,-63,-58,-62,-61,-42,16,-32,-39,-37,-35,-43,-118,-75,-64,-40,16,16,16,-17,-18,-14,-13,-16,-33,-38,-36,-34,-118,-54,-71,-76,16,-20,-44,-65,-69,-73,-19,-22,-118,-53,-41,-45,16,-66,16,-21,-70,-115,16,-56,-67,-55,-63,16,-68,-52,-72,-74,]),'ISEQUAL':([54,55,56,58,59,60,61,62,63,67,73,77,78,108,109,167,168,169,171,201,202,],[-82,-94,-114,-106,-113,-100,-104,119,-105,-82,-105,-106,-104,-96,-95,-82,-99,-103,-93,-83,-107,]),'WHILE':([2,3,7,9,10,13,15,20,26,28,30,31,34,36,37,47,49,65,66,68,70,72,74,75,79,81,85,101,103,105,113,125,126,127,129,131,137,144,145,146,148,149,150,151,152,159,161,170,173,174,175,176,177,184,186,188,189,190,191,192,193,204,205,208,210,212,213,214,218,219,221,223,224,227,231,232,233,234,237,238,239,],[18,18,-7,-11,-4,-10,-12,-9,-5,-8,-15,-3,-2,-31,18,18,-6,-30,-118,-60,-59,-57,-63,-58,-62,-61,-42,18,-32,-39,-37,-35,-43,-118,-75,-64,-40,18,18,18,-17,-18,-14,-13,-16,-33,-38,-36,-34,-118,-54,-71,-76,-20,-44,-65,-69,-73,-19,215,-22,-118,-53,-41,-45,18,-66,18,-21,-70,-115,18,-56,-67,-55,-63,18,-68,-52,-72,-74,]),'NUM':([25,30,35,36,37,42,44,46,47,57,65,66,68,70,71,72,74,75,79,81,85,101,103,104,105,106,107,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,131,132,133,134,135,137,144,145,146,148,149,150,151,152,159,161,170,173,174,175,176,177,188,189,190,193,203,204,205,207,208,212,213,214,218,219,220,223,224,227,228,231,232,233,234,237,238,239,],[51,-15,63,-31,73,73,73,97,73,73,-30,-118,-60,-59,73,-57,-63,-58,-62,-61,-42,73,-32,73,-39,73,-102,73,-101,-37,-86,73,73,-89,-91,-92,-98,-90,-88,-87,-97,-35,-43,-118,-75,-64,73,73,73,73,-40,73,73,73,-17,-18,-14,-13,-16,-33,-38,-36,-34,-118,-54,-71,-76,-65,-69,-73,-22,73,-118,-53,73,-41,73,-66,73,-21,-70,73,73,-56,-67,73,-55,-63,73,-68,-52,-72,-74,]),'DIVIDE':([54,55,56,58,59,60,61,63,67,73,77,78,167,168,169,171,201,202,],[-82,107,-114,-106,-113,-100,-104,-105,-82,-105,-106,-104,-82,-99,-103,107,-83,-107,]),'LESSEQUAL':([54,55,56,58,59,60,61,62,63,67,73,77,78,108,109,167,168,169,171,201,202,],[-82,-94,-114,-106,-113,-100,-104,123,-105,-82,-105,-106,-104,-96,-95,-82,-99,-103,-93,-83,-107,]),'$end':([1,33,],[0,-1,]),'LESS':([54,55,56,58,59,60,61,62,63,67,73,77,78,108,109,167,168,169,171,201,202,],[-82,-94,-114,-106,-113,-100,-104,114,-105,-82,-105,-106,-104,-96,-95,-82,-99,-103,-93,-83,-107,]),'REQUIRE':([2,3,7,9,10,13,15,20,26,28,30,31,34,36,49,65,68,70,72,74,75,79,81,85,103,105,113,125,126,129,131,137,144,145,146,148,149,150,151,152,159,161,170,173,176,177,184,186,188,189,190,191,193,208,210,213,214,218,219,221,227,233,234,237,238,239,],[19,19,-7,-11,-4,-10,-12,-9,-5,-8,-15,-3,-2,-31,-6,-30,-60,-59,-57,-63,-58,-62,-61,-42,-32,-39,-37,-35,-43,-75,-64,-40,-118,-118,-118,-17,-18,-14,-13,-16,-33,-38,-36,-34,-71,-76,-20,-44,-65,-69,-73,-19,-22,-41,-45,-66,-118,-21,-70,-115,-67,-118,-68,-52,-72,-74,]),'RPAREN':([55,56,59,60,61,62,67,73,77,78,82,86,87,88,89,90,91,92,106,108,109,112,139,140,141,142,143,162,163,164,165,166,167,168,169,171,172,178,179,181,201,202,206,209,211,220,222,225,230,235,],[-94,-114,-113,-100,-104,-85,-82,-105,-106,-104,-78,138,-118,144,-82,145,146,147,-118,-96,-95,169,-50,186,-49,-47,-46,-110,202,-108,-112,-109,-82,-99,-103,-93,-84,-81,-80,-77,-83,-107,-79,-51,-48,229,-111,233,236,239,]),'GREATEREQUAL':([54,55,56,58,59,60,61,62,63,67,73,77,78,108,109,167,168,169,171,201,202,],[-82,-94,-114,-106,-113,-100,-104,117,-105,-82,-105,-106,-104,-96,-95,-82,-99,-103,-93,-83,-107,]),'SEMI':([4,30,36,39,47,53,54,55,56,58,59,60,61,62,63,64,65,67,68,70,71,72,73,74,75,76,77,78,79,81,82,83,85,93,94,95,96,97,98,103,105,108,109,113,125,126,128,129,130,131,136,137,138,144,145,146,147,148,149,150,151,152,159,161,167,168,169,170,171,172,173,176,177,178,179,181,182,186,188,189,190,193,198,200,201,202,206,208,210,213,214,218,219,227,229,233,234,236,237,238,239,],[36,-15,-31,85,-118,103,105,-94,-114,113,-113,-100,-104,-85,125,126,-30,-82,-60,-59,129,-57,-105,-63,-58,131,-106,-104,-62,-61,-78,135,-42,148,149,150,151,152,153,-32,-39,-96,-95,-37,-35,-43,176,-75,177,-64,183,-40,184,-118,-118,-118,191,-17,-18,-14,-13,-16,-33,-38,-82,-99,-103,-36,-93,-84,-34,-71,-76,-81,-80,-77,207,-44,-65,-69,-73,-22,219,221,-83,-107,-79,-41,-45,-66,-118,-21,-70,-67,-116,-118,-68,-117,-52,-72,-74,]),'SWITCH':([2,3,7,9,10,13,15,20,26,28,30,31,34,36,37,47,49,65,66,68,70,72,74,75,79,81,85,101,103,105,113,125,126,127,129,131,137,144,145,146,148,149,150,151,152,159,161,170,173,174,175,176,177,183,184,186,188,189,190,191,193,204,205,208,210,212,213,214,218,219,221,223,224,227,231,232,233,234,237,238,239,],[17,17,-7,-11,-4,-10,-12,-9,-5,-8,-15,-3,-2,-31,17,17,-6,-30,-118,-60,-59,-57,-63,-58,-62,-61,-42,17,-32,-39,-37,-35,-43,-118,-75,-64,-40,17,17,17,-17,-18,-14,-13,-16,-33,-38,-36,-34,-118,-54,-71,-76,17,-20,-44,-65,-69,-73,-19,-22,-118,-53,-41,-45,17,-66,17,-21,-70,-115,17,-56,-67,-55,-63,17,-68,-52,-72,-74,]),'DO':([2,3,7,9,10,13,15,20,26,28,30,31,34,36,37,47,49,65,66,68,70,72,74,75,79,81,85,101,103,105,113,125,126,127,129,131,137,144,145,146,148,149,150,151,152,159,161,170,173,174,175,176,177,184,186,188,189,190,191,193,204,205,208,210,212,213,214,218,219,221,223,224,227,231,232,233,234,237,238,239,],[21,21,-7,-11,-4,-10,-12,-9,-5,-8,-15,-3,-2,-31,21,21,-6,-30,-118,-60,-59,-57,-63,-58,-62,-61,-42,21,-32,-39,-37,-35,-43,-118,-75,-64,-40,21,21,21,-17,-18,-14,-13,-16,-33,-38,-36,-34,-118,-54,-71,-76,-20,-44,-65,-69,-73,-19,-22,-118,-53,-41,-45,21,-66,21,-21,-70,-115,21,-56,-67,-55,-63,21,-68,-52,-72,-74,]),'DEQUAL':([54,55,56,58,59,60,61,62,63,67,73,77,78,108,109,167,168,169,171,201,202,],[-82,-94,-114,-106,-113,-100,-104,121,-105,-82,-105,-106,-104,-96,-95,-82,-99,-103,-93,-83,-107,]),'CLASS':([2,3,7,8,9,10,13,15,20,23,24,26,27,28,30,31,34,36,37,47,49,65,66,68,70,72,74,75,79,80,81,85,101,103,105,113,125,126,127,129,131,137,144,145,146,148,149,150,151,152,159,161,170,173,174,175,176,177,184,186,188,189,190,191,193,204,205,208,210,212,213,214,218,219,221,223,224,227,231,232,233,234,237,238,239,],[22,22,-7,-28,-11,-4,-10,-12,-9,50,-29,-5,-27,-8,-15,-3,-2,-31,22,22,-6,-30,-118,-60,-59,-57,-63,-58,-62,50,-61,-42,22,-32,-39,-37,-35,-43,-118,-75,-64,-40,22,22,22,-17,-18,-14,-13,-16,-33,-38,-36,-34,-118,-54,-71,-76,-20,-44,-65,-69,-73,-19,-22,-118,-53,-41,-45,22,-66,22,-21,-70,-115,22,-56,-67,-55,-63,22,-68,-52,-72,-74,]),'FALSE':([30,35,36,37,42,44,46,47,57,65,66,68,70,71,72,74,75,79,81,85,101,103,104,105,106,107,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,131,132,133,134,135,137,144,145,146,148,149,150,151,152,159,161,170,173,174,175,176,177,188,189,190,193,203,204,205,207,208,212,213,214,218,219,220,223,224,227,228,231,232,233,234,237,238,239,],[-15,56,-31,56,56,56,56,56,56,-30,-118,-60,-59,56,-57,-63,-58,-62,-61,-42,56,-32,56,-39,56,-102,56,-101,-37,-86,56,56,-89,-91,-92,-98,-90,-88,-87,-97,-35,-43,-118,-75,-64,56,56,56,56,-40,56,56,56,-17,-18,-14,-13,-16,-33,-38,-36,-34,-118,-54,-71,-76,-65,-69,-73,-22,56,-118,-53,56,-41,56,-66,56,-21,-70,56,56,-56,-67,56,-55,-63,56,-68,-52,-72,-74,]),'CLOSETAG':([2,3,7,9,10,13,15,20,26,28,30,31,34,36,49,65,68,70,72,74,75,79,81,85,103,105,113,125,126,129,131,137,144,145,146,148,149,150,151,152,159,161,170,173,176,177,184,186,188,189,190,191,193,208,210,213,214,218,219,221,227,233,234,237,238,239,],[-118,33,-7,-11,-4,-10,-12,-9,-5,-8,-15,-3,-2,-31,-6,-30,-60,-59,-57,-63,-58,-62,-61,-42,-32,-39,-37,-35,-43,-75,-64,-40,-118,-118,-118,-17,-18,-14,-13,-16,-33,-38,-36,-34,-71,-76,-20,-44,-65,-69,-73,-19,-22,-41,-45,-66,-118,-21,-70,-115,-67,-118,-68,-52,-72,-74,]),'PROTECTED':([2,3,7,9,10,13,15,20,26,28,30,31,34,36,37,47,49,65,66,68,70,72,74,75,79,81,85,99,101,103,105,113,125,126,127,129,131,137,144,145,146,148,149,150,151,152,154,156,159,161,170,173,174,175,176,177,184,186,188,189,190,191,193,195,196,197,204,205,208,210,212,213,214,216,217,218,219,221,223,224,227,231,232,233,234,237,238,239,],[24,24,-7,-11,-4,-10,-12,-9,-5,-8,-15,-3,-2,-31,24,24,-6,-30,-118,-60,-59,-57,-63,-58,-62,-61,-42,24,24,-32,-39,-37,-35,-43,-118,-75,-64,-40,24,24,24,-17,-18,-14,-13,-16,24,24,-33,-38,-36,-34,-118,-54,-71,-76,-20,-44,-65,-69,-73,-19,-22,-26,-24,24,-118,-53,-41,-45,24,-66,24,-25,-23,-21,-70,-115,24,-56,-67,-55,-63,24,-68,-52,-72,-74,]),'CASE':([2,3,7,9,10,13,15,20,26,28,30,31,34,36,37,47,49,65,66,68,70,72,74,75,79,81,85,101,103,105,113,125,126,127,129,131,137,144,145,146,148,149,150,151,152,159,161,170,173,174,175,176,177,183,184,186,188,189,190,191,193,204,205,208,210,212,213,214,218,219,221,223,224,227,231,232,233,234,237,238,239,],[25,25,-7,-11,-4,-10,-12,-9,-5,-8,-15,-3,-2,-31,25,25,-6,-30,-118,-60,-59,-57,-63,-58,-62,-61,-42,25,-32,-39,-37,-35,-43,-118,-75,-64,-40,25,25,25,-17,-18,-14,-13,-16,-33,-38,-36,-34,-118,-54,-71,-76,25,-20,-44,-65,-69,-73,-19,-22,-118,-53,-41,-45,25,-66,25,-21,-70,-115,25,-56,-67,-55,-63,25,-68,-52,-72,-74,]),'OPENTAG':([0,],[2,]),'AND':([55,56,59,60,61,62,67,73,76,77,78,82,88,91,108,109,112,130,160,165,167,168,169,171,172,178,179,181,182,201,202,206,222,235,],[-94,-114,-113,-100,-104,-85,-82,-105,133,-106,-104,-78,133,133,-96,-95,133,133,133,133,-82,-99,-103,-93,-84,133,-80,133,133,-83,-107,-79,133,133,]),'PLUS':([54,55,56,58,59,60,61,62,63,67,73,77,78,108,109,167,168,169,171,172,201,202,225,],[-82,-94,-114,-106,-113,-100,-104,124,-105,-82,-105,-106,-104,-96,-95,-82,-99,-103,-93,124,-83,-107,124,]),'ELSEIF':([30,68,70,72,74,75,79,81,129,131,144,145,146,148,149,150,151,152,176,177,188,189,190,193,212,213,214,218,219,226,227,233,234,237,238,239,],[-15,-60,-59,-57,-63,-58,-62,-61,-75,-64,-118,-118,-118,-17,-18,-14,-13,-16,-71,-76,212,-69,-73,-22,-118,-66,-118,-21,-70,212,-67,-118,-68,-52,-72,-74,]),'PRIVATE':([2,3,7,9,10,13,15,20,26,28,30,31,34,36,37,47,49,65,66,68,70,72,74,75,79,81,85,99,101,103,105,113,125,126,127,129,131,137,144,145,146,148,149,150,151,152,154,156,159,161,170,173,174,175,176,177,184,186,188,189,190,191,193,195,196,197,204,205,208,210,212,213,214,216,217,218,219,221,223,224,227,231,232,233,234,237,238,239,],[27,27,-7,-11,-4,-10,-12,-9,-5,-8,-15,-3,-2,-31,27,27,-6,-30,-118,-60,-59,-57,-63,-58,-62,-61,-42,27,27,-32,-39,-37,-35,-43,-118,-75,-64,-40,27,27,27,-17,-18,-14,-13,-16,27,27,-33,-38,-36,-34,-118,-54,-71,-76,-20,-44,-65,-69,-73,-19,-22,-26,-24,27,-118,-53,-41,-45,27,-66,27,-25,-23,-21,-70,-115,27,-56,-67,-55,-63,27,-68,-52,-72,-74,]),'MINUS':([54,55,56,58,59,60,61,62,63,67,73,77,78,108,109,167,168,169,171,172,201,202,225,],[-82,-94,-114,-106,-113,-100,-104,120,-105,-82,-105,-106,-104,-96,-95,-82,-99,-103,-93,120,-83,-107,120,]),'RBLOCK':([30,36,65,66,68,70,72,74,75,79,81,85,103,105,113,125,126,127,129,131,137,144,145,146,148,149,150,151,152,153,154,159,161,170,173,174,175,176,177,186,188,189,190,193,195,196,197,204,205,208,210,213,214,216,217,218,219,223,224,227,231,232,233,234,237,238,239,],[-15,-31,-30,-118,-60,-59,-57,-63,-58,-62,-61,-42,-32,-39,-37,-35,-43,-118,-75,-64,-40,-118,-118,-118,-17,-18,-14,-13,-16,192,193,-33,-38,-36,-34,-118,-54,-71,-76,-44,-65,-69,-73,-22,-26,-24,218,-118,-53,-41,-45,-66,-118,-25,-23,-21,-70,-118,-56,-67,-55,237,-118,-68,-52,-72,-74,]),'RBRACKET':([55,56,59,60,61,62,67,73,77,78,82,108,109,160,167,168,169,171,172,178,179,181,185,201,202,206,],[-94,-114,-113,-100,-104,-85,-82,-105,-106,-104,-78,-96,-95,201,-82,-99,-103,-93,-84,-81,-80,-77,209,-83,-107,-79,]),'GREATER':([54,55,56,58,59,60,61,62,63,67,73,77,78,108,109,167,168,169,171,201,202,],[-82,-94,-114,-106,-113,-100,-104,122,-105,-82,-105,-106,-104,-96,-95,-82,-99,-103,-93,-83,-107,]),'ECHO':([2,3,7,9,10,13,15,20,26,28,30,31,34,36,37,47,49,65,66,68,70,72,74,75,79,81,85,101,103,105,113,125,126,127,129,131,137,144,145,146,148,149,150,151,152,159,161,170,173,174,175,176,177,184,186,188,189,190,191,193,204,205,208,210,212,213,214,218,219,221,223,224,227,231,232,233,234,237,238,239,],[-118,-118,-7,-11,-4,-10,-12,46,-5,-8,-15,-3,-2,-31,-118,-118,-6,-30,-118,-60,-59,-57,46,-58,-62,-61,-42,-118,-32,-39,-37,-35,-43,46,-75,-64,-40,-118,-118,-118,-17,-18,-14,-13,-16,-33,-38,-36,-34,-118,-54,-71,-76,-20,-44,-65,-69,-73,-19,-22,46,-53,-41,-45,-118,-66,-118,-21,-70,-115,-118,-56,-67,-55,46,-118,-68,-52,-72,-74,]),'ID':([2,3,7,9,10,13,14,15,20,22,26,28,30,31,34,36,49,50,65,68,70,72,74,75,79,81,85,103,105,113,125,126,129,131,137,144,145,146,148,149,150,151,152,158,159,161,170,173,176,177,184,186,188,189,190,191,193,208,210,213,214,218,219,221,227,233,234,237,238,239,],[29,29,-7,-11,-4,-10,41,-12,-9,48,-5,-8,-15,-3,-2,-31,-6,100,-30,-60,-59,-57,-63,-58,-62,-61,-42,-32,-39,-37,-35,-43,-75,-64,-40,-118,-118,-118,-17,-18,-14,-13,-16,199,-33,-38,-36,-34,-71,-76,-20,-44,-65,-69,-73,-19,-22,-41,-45,-66,-118,-21,-70,-115,-67,-118,-68,-52,-72,-74,]),'TIMESTIMES':([2,3,7,8,9,10,13,15,20,24,26,27,28,30,31,34,36,38,49,65,66,68,70,72,74,75,79,81,85,103,105,113,125,126,127,129,131,137,144,145,146,148,149,150,151,152,155,159,161,170,173,174,175,176,177,184,186,188,189,190,191,193,194,205,208,210,213,214,218,219,221,227,233,234,237,238,239,],[32,32,-7,-28,-11,-4,-10,-12,-9,-29,-5,-27,-8,-15,-3,-2,-31,32,-6,-30,-118,-60,-59,-57,-63,-58,-62,-61,-42,-32,-39,-37,-35,-43,-118,-75,-64,-40,-118,-118,-118,-17,-18,-14,-13,-16,32,-33,-38,-36,-34,32,-54,-71,-76,-20,-44,-65,-69,-73,-19,-22,32,-53,-41,-45,-66,-118,-21,-70,-115,-67,-118,-68,-52,-72,-74,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration_list':([2,],[3,]),'term':([35,37,42,44,47,57,71,101,104,106,115,116,132,133,134,135,144,145,146,203,207,212,214,220,223,228,233,],[55,55,55,55,55,55,55,55,55,55,171,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'echo_stmt':([2,3,37,47,66,101,144,145,146,174,212,214,223,233,],[20,20,74,74,127,74,74,74,74,204,74,74,232,74,]),'relop':([62,],[116,]),'statement':([37,47,101,144,145,146,212,214,223,233,],[69,98,157,188,189,190,226,227,231,238,]),'params':([87,],[140,]),'additive_expression':([35,37,42,44,47,57,71,101,104,106,116,132,133,134,135,144,145,146,203,207,212,214,220,223,228,233,],[62,62,62,62,62,62,62,62,62,62,172,62,62,62,62,62,62,62,62,225,62,62,62,62,62,62,]),'attribute':([99,156,],[154,197,]),'local_declarations':([127,],[174,]),'header_declaration':([2,3,],[7,7,]),'declaration':([2,3,],[31,34,]),'var':([35,37,42,43,44,47,57,71,101,104,106,110,115,116,132,133,134,135,144,145,146,203,207,212,214,220,223,228,233,],[61,78,78,90,78,78,78,78,78,78,78,61,61,61,78,78,78,78,78,78,78,78,61,78,78,78,78,78,78,]),'selection':([188,226,],[213,234,]),'iteration_stmt':([2,3,37,47,101,144,145,146,212,214,223,233,],[9,9,68,68,68,68,68,68,68,68,68,68,]),'compount_stmt':([37,47,101,144,145,146,186,212,214,223,233,],[75,75,75,75,75,75,210,75,75,75,75,]),'var_declaration':([2,3,36,38,85,103,105,113,125,155,174,194,],[10,10,65,83,137,159,161,170,173,196,205,217,]),'expression_stmt':([37,47,101,144,145,146,212,214,223,233,],[72,72,72,72,72,72,72,72,72,72,]),'expression':([37,42,44,47,57,71,101,104,106,132,133,134,135,144,145,146,203,212,214,220,223,228,233,],[76,88,91,76,112,130,76,160,165,178,179,181,182,76,76,76,222,76,76,165,76,235,76,]),'boolean':([35,37,42,44,46,47,57,71,101,104,106,110,115,116,132,133,134,135,144,145,146,203,207,212,214,220,223,228,233,],[58,77,77,77,93,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'fun_declaration':([2,3,23,46,155,194,],[26,26,49,94,195,216,]),'addop':([62,172,225,],[115,115,115,]),'statement_list':([204,],[223,]),'selection_stmt':([2,3,37,47,101,144,145,146,183,212,214,223,233,],[13,13,70,70,70,70,70,70,208,70,70,70,70,]),'args_list':([106,220,],[164,164,]),'mulop':([55,171,],[110,110,]),'param':([87,187,],[141,141,]),'factor':([35,37,42,44,47,57,71,101,104,106,110,115,116,132,133,134,135,144,145,146,203,207,212,214,220,223,228,233,],[60,60,60,60,60,60,60,60,60,60,168,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'typeclass':([2,3,],[15,15,]),'class_declaration':([2,3,37,47,101,144,145,146,212,214,223,233,],[28,28,79,79,79,79,79,79,79,79,79,79,]),'args':([106,220,],[163,230,]),'empty':([2,3,37,47,66,87,101,106,127,144,145,146,174,204,212,214,220,223,233,],[30,30,30,30,30,142,30,166,175,30,30,30,30,224,30,30,166,30,30,]),'area':([2,3,37,47,99,101,144,145,146,154,156,197,212,214,223,233,],[23,23,80,80,155,80,80,80,80,194,155,194,80,80,80,80,]),'program':([0,],[1,]),'return_stmt':([37,47,101,144,145,146,212,214,223,233,],[81,81,81,81,81,81,81,81,81,81,]),'constructor':([158,],[200,]),'simple_expression':([35,37,42,44,47,57,71,101,104,106,132,133,134,135,144,145,146,203,212,214,220,223,228,233,],[64,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'param_list':([87,187,],[143,211,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> OPENTAG declaration_list CLOSETAG','program',3,'p_program','Analizador_sintactico.py',28),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','Analizador_sintactico.py',32),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','Analizador_sintactico.py',33),
  ('declaration -> var_declaration','declaration',1,'p_declaration','Analizador_sintactico.py',38),
  ('declaration -> fun_declaration','declaration',1,'p_declaration','Analizador_sintactico.py',39),
  ('declaration -> area fun_declaration','declaration',2,'p_declaration','Analizador_sintactico.py',40),
  ('declaration -> header_declaration','declaration',1,'p_declaration','Analizador_sintactico.py',41),
  ('declaration -> class_declaration','declaration',1,'p_declaration','Analizador_sintactico.py',42),
  ('declaration -> echo_stmt','declaration',1,'p_declaration','Analizador_sintactico.py',43),
  ('declaration -> selection_stmt','declaration',1,'p_declaration','Analizador_sintactico.py',44),
  ('declaration -> iteration_stmt','declaration',1,'p_declaration','Analizador_sintactico.py',45),
  ('declaration -> typeclass','declaration',1,'p_declaration','Analizador_sintactico.py',46),
  ('echo_stmt -> echo_stmt ECHO STRING SEMI','echo_stmt',4,'p_echo_stmt','Analizador_sintactico.py',53),
  ('echo_stmt -> echo_stmt ECHO IDVAR SEMI','echo_stmt',4,'p_echo_stmt','Analizador_sintactico.py',54),
  ('echo_stmt -> empty','echo_stmt',1,'p_echo_stmt','Analizador_sintactico.py',55),
  ('echo_stmt -> echo_stmt ECHO NUM SEMI','echo_stmt',4,'p_echo_stmt','Analizador_sintactico.py',56),
  ('echo_stmt -> echo_stmt ECHO boolean SEMI','echo_stmt',4,'p_echo_stmt','Analizador_sintactico.py',57),
  ('echo_stmt -> echo_stmt ECHO fun_declaration SEMI','echo_stmt',4,'p_echo_stmt','Analizador_sintactico.py',58),
  ('header_declaration -> REQUIRE LPAREN STRING RPAREN SEMI','header_declaration',5,'p_header_declaration','Analizador_sintactico.py',63),
  ('header_declaration -> INCLUDE LPAREN STRING RPAREN SEMI','header_declaration',5,'p_header_declaration','Analizador_sintactico.py',64),
  ('class_declaration -> area CLASS ID LBLOCK attribute RBLOCK','class_declaration',6,'p_class_declaration','Analizador_sintactico.py',69),
  ('class_declaration -> CLASS ID LBLOCK attribute RBLOCK','class_declaration',5,'p_class_declaration','Analizador_sintactico.py',70),
  ('attribute -> attribute area var_declaration','attribute',3,'p_attribute1','Analizador_sintactico.py',75),
  ('attribute -> area var_declaration','attribute',2,'p_attribute1','Analizador_sintactico.py',76),
  ('attribute -> attribute area fun_declaration','attribute',3,'p_attribute1','Analizador_sintactico.py',77),
  ('attribute -> area fun_declaration','attribute',2,'p_attribute1','Analizador_sintactico.py',78),
  ('area -> PRIVATE','area',1,'p_area','Analizador_sintactico.py',84),
  ('area -> PUBLIC','area',1,'p_area','Analizador_sintactico.py',85),
  ('area -> PROTECTED','area',1,'p_area','Analizador_sintactico.py',86),
  ('var_declaration -> IDVAR SEMI var_declaration','var_declaration',3,'p_var_declaration','Analizador_sintactico.py',91),
  ('var_declaration -> IDVAR SEMI','var_declaration',2,'p_var_declaration','Analizador_sintactico.py',92),
  ('var_declaration -> TIMESTIMES IDVAR SEMI','var_declaration',3,'p_var_declaration','Analizador_sintactico.py',93),
  ('var_declaration -> TIMESTIMES IDVAR SEMI var_declaration','var_declaration',4,'p_var_declaration','Analizador_sintactico.py',94),
  ('var_declaration -> IDVAR EQUAL NUM SEMI var_declaration','var_declaration',5,'p_var_declaration','Analizador_sintactico.py',95),
  ('var_declaration -> IDVAR EQUAL NUM SEMI','var_declaration',4,'p_var_declaration','Analizador_sintactico.py',96),
  ('var_declaration -> IDVAR EQUAL boolean SEMI var_declaration','var_declaration',5,'p_var_declaration','Analizador_sintactico.py',97),
  ('var_declaration -> IDVAR EQUAL boolean SEMI','var_declaration',4,'p_var_declaration','Analizador_sintactico.py',98),
  ('var_declaration -> IDVAR EQUAL IDVAR SEMI var_declaration','var_declaration',5,'p_var_declaration','Analizador_sintactico.py',99),
  ('var_declaration -> IDVAR EQUAL IDVAR SEMI','var_declaration',4,'p_var_declaration','Analizador_sintactico.py',100),
  ('var_declaration -> AMPERSANT IDVAR SEMI var_declaration','var_declaration',4,'p_var_declaration','Analizador_sintactico.py',101),
  ('var_declaration -> AMPERSANT IDVAR EQUAL IDVAR SEMI selection_stmt','var_declaration',6,'p_var_declaration','Analizador_sintactico.py',102),
  ('var_declaration -> AMPERSANT IDVAR SEMI','var_declaration',3,'p_var_declaration','Analizador_sintactico.py',103),
  ('var_declaration -> IDVAR EQUAL simple_expression SEMI','var_declaration',4,'p_var_declaration','Analizador_sintactico.py',104),
  ('fun_declaration -> FUNCTION ID LPAREN params RPAREN','fun_declaration',5,'p_fun_declaration','Analizador_sintactico.py',109),
  ('fun_declaration -> FUNCTION ID LPAREN params RPAREN compount_stmt','fun_declaration',6,'p_fun_declaration','Analizador_sintactico.py',110),
  ('params -> param_list','params',1,'p_params','Analizador_sintactico.py',115),
  ('params -> empty','params',1,'p_params','Analizador_sintactico.py',116),
  ('param_list -> param_list COMMA param_list','param_list',3,'p_param_list','Analizador_sintactico.py',121),
  ('param_list -> param','param_list',1,'p_param_list','Analizador_sintactico.py',122),
  ('param -> IDVAR','param',1,'p_param','Analizador_sintactico.py',127),
  ('param -> IDVAR LBRACKET RBRACKET','param',3,'p_param','Analizador_sintactico.py',128),
  ('compount_stmt -> LBLOCK echo_stmt local_declarations echo_stmt statement_list echo_stmt RBLOCK','compount_stmt',7,'p_compount_stmt','Analizador_sintactico.py',134),
  ('local_declarations -> local_declarations var_declaration','local_declarations',2,'p_local_declarations','Analizador_sintactico.py',138),
  ('local_declarations -> empty','local_declarations',1,'p_local_declarations','Analizador_sintactico.py',139),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','Analizador_sintactico.py',144),
  ('statement_list -> empty','statement_list',1,'p_statement_list','Analizador_sintactico.py',145),
  ('statement -> expression_stmt','statement',1,'p_statement','Analizador_sintactico.py',150),
  ('statement -> compount_stmt','statement',1,'p_statement','Analizador_sintactico.py',151),
  ('statement -> selection_stmt','statement',1,'p_statement','Analizador_sintactico.py',152),
  ('statement -> iteration_stmt','statement',1,'p_statement','Analizador_sintactico.py',153),
  ('statement -> return_stmt','statement',1,'p_statement','Analizador_sintactico.py',154),
  ('statement -> class_declaration','statement',1,'p_statement','Analizador_sintactico.py',155),
  ('statement -> echo_stmt','statement',1,'p_statement','Analizador_sintactico.py',156),
  ('expression_stmt -> expression SEMI','expression_stmt',2,'p_expression_stmt','Analizador_sintactico.py',161),
  ('selection_stmt -> IF LPAREN expression RPAREN statement','selection_stmt',5,'p_selection_stmt_1','Analizador_sintactico.py',166),
  ('selection_stmt -> IF LPAREN expression RPAREN statement selection','selection_stmt',6,'p_selection_stmt_1','Analizador_sintactico.py',167),
  ('selection -> ELSE statement','selection',2,'p_selection','Analizador_sintactico.py',173),
  ('selection -> ELSEIF statement selection','selection',3,'p_selection','Analizador_sintactico.py',174),
  ('selection_stmt -> SWITCH LPAREN var RPAREN statement','selection_stmt',5,'p_selection_stmt_2','Analizador_sintactico.py',179),
  ('selection_stmt -> CASE NUM COLON statement BREAK SEMI','selection_stmt',6,'p_selection_stmt_2','Analizador_sintactico.py',180),
  ('selection_stmt -> DEFAULT COLON statement BREAK SEMI','selection_stmt',5,'p_selection_stmt_2','Analizador_sintactico.py',181),
  ('iteration_stmt -> FOR LPAREN var_declaration SEMI expression SEMI additive_expression RPAREN statement','iteration_stmt',9,'p_iteration_stmt_1','Analizador_sintactico.py',187),
  ('iteration_stmt -> WHILE LPAREN expression RPAREN statement','iteration_stmt',5,'p_iteration_stmt_2','Analizador_sintactico.py',190),
  ('iteration_stmt -> DO LBLOCK statement SEMI RBLOCK WHILE LPAREN expression RPAREN','iteration_stmt',9,'p_iteration_stmt_3','Analizador_sintactico.py',194),
  ('return_stmt -> RETURN SEMI','return_stmt',2,'p_return_stmt','Analizador_sintactico.py',199),
  ('return_stmt -> RETURN expression SEMI','return_stmt',3,'p_return_stmt','Analizador_sintactico.py',200),
  ('expression -> var EQUAL expression','expression',3,'p_expression','Analizador_sintactico.py',205),
  ('expression -> simple_expression','expression',1,'p_expression','Analizador_sintactico.py',206),
  ('expression -> var EQUAL AMPERSANT IDVAR','expression',4,'p_expression','Analizador_sintactico.py',207),
  ('expression -> expression AND expression','expression',3,'p_expression','Analizador_sintactico.py',208),
  ('expression -> expression OR expression','expression',3,'p_expression','Analizador_sintactico.py',209),
  ('var -> IDVAR','var',1,'p_var','Analizador_sintactico.py',214),
  ('var -> IDVAR LBRACKET expression RBRACKET','var',4,'p_var','Analizador_sintactico.py',215),
  ('simple_expression -> additive_expression relop additive_expression','simple_expression',3,'p_simple_expression','Analizador_sintactico.py',221),
  ('simple_expression -> additive_expression','simple_expression',1,'p_simple_expression','Analizador_sintactico.py',222),
  ('relop -> LESS','relop',1,'p_relop','Analizador_sintactico.py',227),
  ('relop -> LESSEQUAL','relop',1,'p_relop','Analizador_sintactico.py',228),
  ('relop -> GREATER','relop',1,'p_relop','Analizador_sintactico.py',229),
  ('relop -> GREATEREQUAL','relop',1,'p_relop','Analizador_sintactico.py',230),
  ('relop -> DEQUAL','relop',1,'p_relop','Analizador_sintactico.py',231),
  ('relop -> DISTINT','relop',1,'p_relop','Analizador_sintactico.py',232),
  ('relop -> ISEQUAL','relop',1,'p_relop','Analizador_sintactico.py',233),
  ('additive_expression -> additive_expression addop term','additive_expression',3,'p_additive_expression','Analizador_sintactico.py',238),
  ('additive_expression -> term','additive_expression',1,'p_additive_expression','Analizador_sintactico.py',239),
  ('additive_expression -> term MINUSMINUS','additive_expression',2,'p_additive_expression','Analizador_sintactico.py',240),
  ('additive_expression -> term PLUSPLUS','additive_expression',2,'p_additive_expression','Analizador_sintactico.py',241),
  ('addop -> PLUS','addop',1,'p_addop','Analizador_sintactico.py',246),
  ('addop -> MINUS','addop',1,'p_addop','Analizador_sintactico.py',247),
  ('term -> term mulop factor','term',3,'p_term','Analizador_sintactico.py',252),
  ('term -> factor','term',1,'p_term','Analizador_sintactico.py',253),
  ('mulop -> TIMES','mulop',1,'p_mulop','Analizador_sintactico.py',258),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','Analizador_sintactico.py',259),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','Analizador_sintactico.py',264),
  ('factor -> var','factor',1,'p_factor','Analizador_sintactico.py',265),
  ('factor -> NUM','factor',1,'p_factor','Analizador_sintactico.py',266),
  ('factor -> boolean','factor',1,'p_factor','Analizador_sintactico.py',267),
  ('factor -> IDVAR LPAREN args RPAREN','factor',4,'p_factor','Analizador_sintactico.py',268),
  ('args -> args_list','args',1,'p_args','Analizador_sintactico.py',273),
  ('args -> empty','args',1,'p_args','Analizador_sintactico.py',274),
  ('args -> VOID','args',1,'p_args','Analizador_sintactico.py',275),
  ('args_list -> args_list COMMA expression','args_list',3,'p_args_list','Analizador_sintactico.py',280),
  ('args_list -> expression','args_list',1,'p_args_list','Analizador_sintactico.py',281),
  ('boolean -> TRUE','boolean',1,'p_boolean','Analizador_sintactico.py',286),
  ('boolean -> FALSE','boolean',1,'p_boolean','Analizador_sintactico.py',287),
  ('typeclass -> ID IDVAR EQUAL NEW constructor SEMI','typeclass',6,'p_tclass','Analizador_sintactico.py',292),
  ('constructor -> ID LPAREN RPAREN','constructor',3,'p_costructor','Analizador_sintactico.py',296),
  ('constructor -> ID LPAREN args RPAREN','constructor',4,'p_costructor','Analizador_sintactico.py',297),
  ('empty -> <empty>','empty',0,'p_empty','Analizador_sintactico.py',302),
]
